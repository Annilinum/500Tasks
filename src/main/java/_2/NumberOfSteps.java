package _2;

/** 1342

Учитывая целое число num, вернуть количество шагов, чтобы уменьшить его до нуля.
 За один шаг, если текущее число четное, вы должны разделить его на 2, в противном случае вы должны вычесть 1 из него.

    Пример 1:

    Ввод: число = 14
    Вывод: 6
    Объяснение:
    Шаг 1) 14 четно; делим на 2 и получаем 7.
    Шаг 2) 7 нечетное; вычесть 1 и получить 6.
    Шаг 3) 6 четно; делим на 2 и получаем 3.
    Шаг 4) 3 нечетно; вычесть 1 и получить 2.
    Шаг 5) 2 четно; делим на 2 и получаем 1.
    Шаг 6) 1 нечетное; вычесть 1 и получить 0.

    Пример 2:

    Ввод: число = 8
    Вывод: 4
    Объяснение:
    Шаг 1) 8 четно; делим на 2 и получаем 4.
    Шаг 2) 4 четно; делим на 2 и получаем 2.
    Шаг 3) 2 четно; делим на 2 и получаем 1.
    Шаг 4) 1 нечетное; вычесть 1 и получить 0.

    Пример 3:

    Ввод: число = 123
    Выход: 12


    Ограничения:

    0 <= num <= 106

 */
public class NumberOfSteps {
  public static void main(String[] args) {
    System.out.println(new NumberOfSteps().numberOfSteps(14));
  }
  public int numberOfSteps(int num) {

    int count = 0;
    while (num > 0) {
      if (num % 2 == 0) {
        num = num / 2;
      } else {
        num -= 1;
      }
      count++;
    }
    return count;
  }
}

